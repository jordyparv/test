MERGE INTO sec_contact_temp a
USING (SELECT :LOGIN_ID AS id FROM dual) b
ON (a.LOGIN_ID = b.id)
WHEN MATCHED THEN
    UPDATE SET
        a.ENTERPRISE_ID = :ENTERPRISE_ID,
        a.EMPLOYEE_ID = :EMPLOYEE_ID,
        a.FIRSTNAME = :FIRSTNAME,
        a.LASTNAME = :LASTNAME,
        a.PHONE = :PHONE,
        a.EMAIL = :EMAIL,
        a.TITLE = :TITLE,
        a.ROLE = :ROLE,
        a.MANAGER_ID = :MANAGER_ID,
        a.MARKET = :MARKET,
        a.SUBMARKET = :SUBMARKET,
        a.NO_LDAP_OVERRIDE =:NO_LDAP_OVERRIDE,
        a.ALT_PHONE = :ALT_PHONE,
        a.MODIFIED_DATE =TO_DATE(:MODIFIED_DATE,\'YYYY-MM-DD HH24:MI:SS\'),
        a.CREATED_DATE=TO_DATE(:CREATED_DATE,\'YYYY-MM-DD HH24:MI:SS\')
WHEN NOT MATCHED THEN
    INSERT (
        LOGIN_ID, ENTERPRISE_ID, EMPLOYEE_ID, FIRSTNAME, LASTNAME, PHONE, EMAIL, TITLE, ROLE, MANAGER_ID, MARKET, SUBMARKET, MODIFIED_DATE,CREATED_DATE  ,NO_LDAP_OVERRIDE,ALT_PHONE
    )
    VALUES (
        :LOGIN_ID, :ENTERPRISE_ID, :EMPLOYEE_ID, :FIRSTNAME, :LASTNAME, :PHONE, :EMAIL, :TITLE, :ROLE, :MANAGER_ID, :MARKET, :SUBMARKET, TO_DATE(:MODIFIED_DATE,\'YYYY-MM-DD HH24:MI:SS\'),TO_DATE(:CREATED_DATE,\'YYYY-MM-DD HH24:MI:SS\'),:NO_LDAP_OVERRIDE, :ALT_PHONE
    )
