sample code is below:
 
// server.js
const express = require('express');
const axios = require('axios');
const NominatimGeocoder = require('nominatim-geocoder');
 
const app = express();
const port = 3000;
 
// Initialize Nominatim Geocoder
const geocoder = new NominatimGeocoder();
 
// 1) Typeahead Address API for Entire USA
app.get('/api/typeahead', async (req, res) => {
    const { input } = req.query;
 
    if (!input) {
        return res.status(400).json({ error: "Input query is required." });
    }
 
    try {
        const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(input)}&addressdetails=1&countrycodes=us&limit=5`;
        const response = await axios.get(url);
        const suggestions = response.data.map(item => ({
            display_name: item.display_name,
            lat: item.lat,
            lon: item.lon
        }));
        res.json(suggestions);
    } catch (error) {
        res.status(500).json({ error: "Error fetching typeahead suggestions." });
    }
});
 
// 2) Fetch lat, long, state, statecode, city, county, zipcode based on address
app.get('/api/address-details', async (req, res) => {
    const { address } = req.query;
 
    if (!address) {
        return res.status(400).json({ error: "Address query is required." });
    }
 
    try {
        const geoData = await geocoder.search({ q: address, countrycodes: 'us', addressdetails: 1 });
 
        if (!geoData || geoData.length === 0) {
            return res.status(404).json({ error: "No results found for the given address." });
        }
 
        const result = geoData[0];
 
        const addressDetails = {
            latitude: result.lat,
            longitude: result.lon,
            state: result.address.state,
            stateCode: result.address.state_code || result.address.state,
            city: result.address.city || result.address.town || result.address.village,
            county: result.address.county || result.address.region,
            zipcode: result.address.postcode
        };
 
        res.json(addressDetails);
    } catch (error) {
        res.status(500).json({ error: "Error fetching address details." });
    }
});
 
app.listen(port, () => {
    console.log(`Server running on port ${port}`);
});
