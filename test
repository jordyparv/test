import { Entity, PrimaryGeneratedColumn, Column, ManyToOne, OneToMany } from 'typeorm';

@Entity('DIRECTIVE_USER_GROUP_MAPPING') // Specify the table name here
export class DirectiveUserGroupMappingEntity {
  @PrimaryGeneratedColumn()
  MAPPING_ID: number;
  @Column()
  GROUP_ID: number;
  @Column()
  USER_ID: string;
  @ManyToOne(() => DirectiveGroupEntity, (group) => group.userGroupMappings)
  group: DirectiveGroupEntity;

  @ManyToOne(() => SecContactEntity, (contact) => contact.userGroupMappings)
  user: SecContactEntity;
}

@Entity('DIRECTIVE_GROUP')
export class DirectiveGroupEntity {
  @PrimaryGeneratedColumn()
  GROUP_ID: number;
  @Column()
  GROUP_NAME: string;
  @OneToMany(() => DirectiveUserGroupMappingEntity, (mapping) => mapping.group)
  userGroupMappings: DirectiveUserGroupMappingEntity[];

  @OneToMany(() => DirectiveElementGroupMappingEntity, (mapping) => mapping.group)
  elementGroupMappings: DirectiveElementGroupMappingEntity[];
}

@Entity('SWITCH_ELEMENTS')
export class SwitchElementEntity {
  @PrimaryGeneratedColumn()
  ELEMENT_ID: number;
  @Column()
  DESCRIPTION: string;
  @Column()
  ELEMENT_DIVISION: string;
  @Column()
  ELEMENT_DEPT: string;
  @Column()
  ELEMENT_SUB_DEPT: string;
  @Column()
  IS_DISABLED: string;
  @Column()
  META_UNIVERSAL_ID: string;
  @Column()
  META_CREATED_DATE: Date;
  @Column()
  META_CREATED_BY: string;
  @Column()
  META_LAST_UPDATED_DATE: Date;
  @Column()
  META_LAST_UPDATED_BY: string;
  @Column()
  NO_DIRTRACKER: number;
  @Column()
  VENDOR: string;
  @OneToMany(() => DirectiveElementGroupMappingEntity, (mapping) => mapping.element)
  elementGroupMappings: DirectiveElementGroupMappingEntity[];
}
@Entity('DIRECTIVE_ELEMENT_GROUP_MAPPING')
export class DirectiveElementGroupMappingEntity {
  @PrimaryGeneratedColumn()
  ELEMENT_MAPPING_ID: number;
  @Column()
  GROUP_ID: number;
  @Column()
  ELEMENT_ID: number;
  @ManyToOne(() => DirectiveGroupEntity, (group) => group.elementGroupMappings)
  group: DirectiveGroupEntity;

  @ManyToOne(() => SwitchElementEntity, (element) => element.elementGroupMappings)
  element: SwitchElementEntity;
}

@Entity('SEC_CONTACT')
export class SecContactEntity {
  @PrimaryGeneratedColumn()
  CONTACT_ID: number;
  @Column()
  LOGIN_ID: string;
  @Column()
  ENTERPRISE_ID: string;
  @Column()
  EMPLOYEE_ID: number;
  @Column()
  FIRSTNAME: string;
  @Column()
  LASTNAME: string;
  @Column()
  PHONE: string;
  @Column()
  EMAIL: string;
  @Column()
  TITLE: string;
  @Column()
  ROLE: string;
  @Column()
  MANAGER_ID: string;
  @Column()
  DIRECTOR_ID: string;
  @Column()
  MARKET_ID: string;
  @Column()
  MARKET: string;
  @Column()
  SUBMARKET: string
  @Column()
  START_DATE: Date;
  @Column()
  END_DATE: Date;
  @Column()
  CREATED_DATE: Date;
  @Column()
  MODIFIED_DATE: Date;
  @Column()
  NO_LDAP_OVERRIDE: number;
  @Column()
  IS_BETA_USER: number;
  @Column()
  ALT_PHONE: string;
  @OneToMany(() => DirectiveUserGroupMappingEntity, (mapping) => mapping.user)
  userGroupMappings: DirectiveUserGroupMappingEntity[];
}
 group: DirectiveGroupEntity;
         ^


ReferenceError: Cannot access 'DirectiveGroupEntity' before initialization
