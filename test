it('should correctly fetch and process raw data into grouped structure', async () => {
  // Arrange
  const rawData = [
    {
      group_name: 'Group 1',
      created_by: 'Admin',
      created_on: '2024-01-01',
      group_id: 1,
      mapping_id: 101,
      assigned_team: 'user1,user2',
      manager_id: 'manager1',
      vendor: 'Vendor A',
      elements_division: 'Division 1',
      element_dept: 'Dept A',
      element_id: 1,
    },
    {
      group_name: 'Group 2',
      created_by: 'Admin',
      created_on: '2024-01-02',
      group_id: 2,
      mapping_id: 102,
      assigned_team: 'user2,user3',
      manager_id: 'manager2',
      vendor: 'Vendor B',
      elements_division: 'Division 2',
      element_dept: 'Dept B',
      element_id: 2,
    },
  ];

  const teamsData = [
    {
      switchtech_name: 'User 1',
      role: 'SWITCH_TECHNICIAN',
      login_id: 'user1',
    },
    {
      switchtech_name: 'User 2',
      role: 'TECHNICIAN',
      login_id: 'user2',
    },
  ];

  // Mock createQueryBuilder for raw data fetch
  directiveGroupEntityRepository.createQueryBuilder.mockReturnValue({
    select: jest.fn().mockReturnThis(),
    innerJoin: jest.fn().mockReturnThis(),
    orderBy: jest.fn().mockReturnThis(),
    getRawMany: jest.fn().mockResolvedValue(rawData),
  });

  // Mock createQueryBuilder for teams data fetch
  secContactEntityRepository.createQueryBuilder.mockReturnValue({
    select: jest.fn().mockReturnThis(),
    innerJoin: jest.fn().mockReturnThis(),
    where: jest.fn().mockReturnThis(),
    getRawMany: jest.fn().mockResolvedValue(teamsData),
  });

  // Act
  const result = await service.getSwitchDirective();

  // Assert
  expect(result).toEqual([
    {
      group_id: 1,
      elements_division: 'Division 1',
      vendor: 'Vendor A',
      group_name: 'Group 1',
      created_by: 'Admin',
      created_on: '2024-01-01',
      assigned_team: [
        { switchtech_name: 'User 1', login_id: 'user1', role: 'SWITCH_TECHNICIAN', checked: true },
        { switchtech_name: 'User 2', login_id: 'user2', role: 'TECHNICIAN', checked: true },
      ],
      elements: [
        { element_id: 1, element_name: 'Division 1', vendor: 'Vendor A', sub_element_name: 'Dept A' },
      ],
      element_dept: '1 Dept',
    },
    {
      group_id: 2,
      elements_division: 'Division 2',
      vendor: 'Vendor B',
      group_name: 'Group 2',
      created_by: 'Admin',
      created_on: '2024-01-02',
      assigned_team: [
        { switchtech_name: 'User 2', login_id: 'user2', role: 'TECHNICIAN', checked: true },
        { switchtech_name: 'User 3', login_id: 'user3', role: 'SWITCH_TECHNICIAN', checked: false },
      ],
      elements: [
        { element_id: 2, element_name: 'Division 2', vendor: 'Vendor B', sub_element_name: 'Dept B' },
      ],
      element_dept: '1 Dept',
    },
  ]);
});
