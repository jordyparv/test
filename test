 OpsTechColName:[
    "tech_name",
    "tech_name_2",
    "tech_name_3",
    "tech_name_4",
    "tech_name_5",
    "tech_name_6",
    "tech_name_7",
    "tech_name_8",
    "tech_name_9",
    "tech_name_10",
    "tech_name_11",
    "tech_name_12",
    "tech_name_13",
    "tech_name_14",
    "tech_name_15",
    "tech_name_16",
    "tech_name_17",
    "tech_name_18",
    "tech_name_19",
    "tech_name_20",
    "tech_name_21",
    "tech_name_22",
    "tech_name_23",
    "tech_name_24",
    "tech_name_25",
    "tech_name_26",
    "tech_name_27",
    "tech_name_28",
    "tech_name_29",
    "tech_name_30"
  ],
  OpsMgrColName:[
    "manager_id",
    "manager_id_2",
  ],
  OpsImpEngColName:[   
    "IMP_ENGINEER_ID",
    "IMP_MANAGER_ID"]



insertBindParams.push({ switchUnid, role, userid, fname, lname });

   const [contactData] = await mssqlCon.executeQuery(getSwitchDetailFromSwitchLoc)

         for(let key in contactData ){
          if(constants.OpsTechColName.includes(key) && contactData[key] == null && contactData[key] == ""){
            apiPayload[key] = null
          }
          if(constants.OpsMgrColName.includes(key) && contactData[key] == null && contactData[key] == ""){
            apiPayload[key] = null
          }
          if(constants.OpsImpEngColName.includes(key) && contactData[key] == null && contactData[key] == ""){
            apiPayload[key] = null
          }
         }

         let techs = insertBindParams.filter(item=>item.role=='SWITCH_TECHNICIAN')?.map(item=>item.userid)
         let mgr = insertBindParams.filter(item=>item.role=='SWITCH_MANAGER')?.map(item=>item.userid)
         let impEng = insertBindParams.filter(item=>item.role=='IMPLEMENTATION_ENGINEER')?.map(item=>item.userid)
         for(let i = 0; i<Object.keys(apiPayload).length;i++){
          constants.OpsTechColName.forEach(item=>{
         
          })
          
