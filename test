const sql = require("mssql");
const fs = require("fs");
const config = require("config");
class MsSqlUtil {
  constructor() {
    this.config = this.getConfig();
    this.pool = new sql.ConnectionPool(this.config);
    this.poolPromise = this.pool.connect();
  }

  getConfig() {
    try {
      const otConfig = JSON.parse(
        fs.readFileSync(config.opsTrackerDbConfig.filePath, "utf8")
      );
      return otConfig;
    } catch (error) {
      console.error("error while read opsTracker db config");
    }
  }
  async getPool() {
    return this.pool;
  }

  async connect() {
    try {
      await this.poolPromise;
      console.info(
        "MS SQL connection pool created and connected to SQL Server"
      );
    } catch (error) {
      console.error("Error creating connection pool: ", error);
      throw error;
    }
  }

  async disconnect() {
    try {
      await this.pool.close();
      console.log("Connection to SQL Server closed");
    } catch (error) {
      console.error("Error closing connection SQL Server: ", error);
      throw error;
    }
  }

  async executeQuery(sqlQuery) {
    try {
      console.log(`Executing Query: ${sqlQuery}`);
      await this.connect();
      const result = await this.pool.request().query(sqlQuery);
      return result.recordset;
    } catch (error) {
      console.error("Error executing SQL query: ", error);
      await this.disconnect();
      throw error;
    }
  }
}

module.exports = MsSqlUtil;
